apply from: "../config/config.gradle"

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: "androidx.navigation.safeargs.kotlin"


android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    final Properties localProps = new Properties()
    localProps.load(project.rootProject.file('local.properties').newReader())

    defaultConfig {
        applicationId "com.sergeyfitis.moviekeeper"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_KEY", "\"${localProps.getProperty("api.key")}\""
        buildConfigField "String", "API_V", "\"3\""
        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/\""
    }

    signingConfigs {
        debug {
            storeFile file('../debug_key.jks')
            storePassword localProps.getProperty("sign.pass")
            keyPassword localProps.getProperty("sign.pass")
            keyAlias = localProps.getProperty("sign.alias")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    packagingOptions {
        pickFirst 'META-INF/atomicfu.kotlin_module'
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-core.kotlin_module'
        pickFirst 'META-INF/ktor-http.kotlin_module'
        pickFirst 'META-INF/ktor-utils.kotlin_module'
        pickFirst 'META-INF/ktor-http-cio.kotlin_module'
        pickFirst 'META-INF/ktor-client-core.kotlin_module'
        pickFirst 'META-INF/kotlinx-serialization-runtime.kotlin_module'
        pickFirst 'META-INF/ktor-io.kotlin_module'
    }
    compileOptions {
        sourceCompatibility = jvm
        targetCompatibility = jvm
    }

    kotlinOptions {
        jvmTarget = jvm
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin"
    implementation "androidx.appcompat:appcompat:$appCompat"
    implementation "androidx.core:core-ktx:$coreKtx"
    implementation 'androidx.fragment:fragment:1.2.2'
    implementation 'com.google.android.material:material:1.2.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation "androidx.recyclerview:recyclerview:$recyclerview"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationKtx"

    implementation "io.ktor:ktor-client-core:$ktor"
    implementation "io.ktor:ktor-client-okhttp:$ktor"
    implementation "io.ktor:ktor-client-serialization-jvm:$ktor"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"

    implementation project(path: ':composable-architecture')

    // tests tests tests!!!
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2-alpha04'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha04'
}
